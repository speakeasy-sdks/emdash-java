/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package emdash.SpaceTraders.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import emdash.SpaceTraders.utils.DateTimeDeserializer;
import emdash.SpaceTraders.utils.DateTimeSerializer;
import java.time.OffsetDateTime;

/**
 * Survey - A resource survey of a waypoint, detailing a specific extraction location and the types of resources that can be found there.
 */
public class Survey {
    /**
     * A list of deposits that can be found at this location.
     */
    @JsonProperty("deposits")
    public SurveyDeposit[] deposits;

    public Survey withDeposits(SurveyDeposit[] deposits) {
        this.deposits = deposits;
        return this;
    }
    
    /**
     * The date and time when the survey expires. After this date and time, the survey will no longer be available for extraction.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expiration")
    public OffsetDateTime expiration;

    public Survey withExpiration(OffsetDateTime expiration) {
        this.expiration = expiration;
        return this;
    }
    
    /**
     * A unique signature for the location of this survey. This signature is verified when attempting an extraction using this survey.
     */
    @JsonProperty("signature")
    public String signature;

    public Survey withSignature(String signature) {
        this.signature = signature;
        return this;
    }
    
    /**
     * The size of the deposit. This value indicates how much can be extracted from the survey before it is exhausted.
     */
    @JsonProperty("size")
    public SurveySize size;

    public Survey withSize(SurveySize size) {
        this.size = size;
        return this;
    }
    
    /**
     * The symbol of the waypoint that this survey is for.
     */
    @JsonProperty("symbol")
    public String symbol;

    public Survey withSymbol(String symbol) {
        this.symbol = symbol;
        return this;
    }
    
    public Survey(@JsonProperty("deposits") SurveyDeposit[] deposits, @JsonProperty("expiration") OffsetDateTime expiration, @JsonProperty("signature") String signature, @JsonProperty("size") SurveySize size, @JsonProperty("symbol") String symbol) {
        this.deposits = deposits;
        this.expiration = expiration;
        this.signature = signature;
        this.size = size;
        this.symbol = symbol;
  }
}
