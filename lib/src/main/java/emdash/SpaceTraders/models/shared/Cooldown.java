/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package emdash.SpaceTraders.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import emdash.SpaceTraders.utils.DateTimeDeserializer;
import emdash.SpaceTraders.utils.DateTimeSerializer;
import java.time.OffsetDateTime;

/**
 * Cooldown - A cooldown is a period of time in which a ship cannot perform certain actions.
 */
public class Cooldown {
    /**
     * The date and time when the cooldown expires in ISO 8601 format
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expiration")
    public OffsetDateTime expiration;

    public Cooldown withExpiration(OffsetDateTime expiration) {
        this.expiration = expiration;
        return this;
    }
    
    /**
     * The remaining duration of the cooldown in seconds
     */
    @JsonProperty("remainingSeconds")
    public Long remainingSeconds;

    public Cooldown withRemainingSeconds(Long remainingSeconds) {
        this.remainingSeconds = remainingSeconds;
        return this;
    }
    
    /**
     * The symbol of the ship that is on cooldown
     */
    @JsonProperty("shipSymbol")
    public String shipSymbol;

    public Cooldown withShipSymbol(String shipSymbol) {
        this.shipSymbol = shipSymbol;
        return this;
    }
    
    /**
     * The total duration of the cooldown in seconds
     */
    @JsonProperty("totalSeconds")
    public Long totalSeconds;

    public Cooldown withTotalSeconds(Long totalSeconds) {
        this.totalSeconds = totalSeconds;
        return this;
    }
    
    public Cooldown(@JsonProperty("remainingSeconds") Long remainingSeconds, @JsonProperty("shipSymbol") String shipSymbol, @JsonProperty("totalSeconds") Long totalSeconds) {
        this.remainingSeconds = remainingSeconds;
        this.shipSymbol = shipSymbol;
        this.totalSeconds = totalSeconds;
  }
}
