/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package emdash.SpaceTraders.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ScannedWaypoint - A waypoint is a location that ships can travel to such as a Planet, Moon or Space Station.
 */
public class ScannedWaypoint {
    /**
     * The chart of a system or waypoint, which makes the location visible to other agents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chart")
    public Chart chart;

    public ScannedWaypoint withChart(Chart chart) {
        this.chart = chart;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("faction")
    public WaypointFaction faction;

    public ScannedWaypoint withFaction(WaypointFaction faction) {
        this.faction = faction;
        return this;
    }
    
    @JsonProperty("orbitals")
    public WaypointOrbital[] orbitals;

    public ScannedWaypoint withOrbitals(WaypointOrbital[] orbitals) {
        this.orbitals = orbitals;
        return this;
    }
    
    @JsonProperty("symbol")
    public String symbol;

    public ScannedWaypoint withSymbol(String symbol) {
        this.symbol = symbol;
        return this;
    }
    
    @JsonProperty("systemSymbol")
    public String systemSymbol;

    public ScannedWaypoint withSystemSymbol(String systemSymbol) {
        this.systemSymbol = systemSymbol;
        return this;
    }
    
    /**
     * The traits of the waypoint.
     */
    @JsonProperty("traits")
    public WaypointTrait[] traits;

    public ScannedWaypoint withTraits(WaypointTrait[] traits) {
        this.traits = traits;
        return this;
    }
    
    /**
     * The type of waypoint.
     */
    @JsonProperty("type")
    public WaypointType type;

    public ScannedWaypoint withType(WaypointType type) {
        this.type = type;
        return this;
    }
    
    @JsonProperty("x")
    public Long x;

    public ScannedWaypoint withX(Long x) {
        this.x = x;
        return this;
    }
    
    @JsonProperty("y")
    public Long y;

    public ScannedWaypoint withY(Long y) {
        this.y = y;
        return this;
    }
    
    public ScannedWaypoint(@JsonProperty("orbitals") WaypointOrbital[] orbitals, @JsonProperty("symbol") String symbol, @JsonProperty("systemSymbol") String systemSymbol, @JsonProperty("traits") WaypointTrait[] traits, @JsonProperty("type") WaypointType type, @JsonProperty("x") Long x, @JsonProperty("y") Long y) {
        this.orbitals = orbitals;
        this.symbol = symbol;
        this.systemSymbol = systemSymbol;
        this.traits = traits;
        this.type = type;
        this.x = x;
        this.y = y;
  }
}
