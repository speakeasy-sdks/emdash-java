/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package emdash.SpaceTraders.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ConnectedSystem {
    @JsonProperty("distance")
    public Long distance;

    public ConnectedSystem withDistance(Long distance) {
        this.distance = distance;
        return this;
    }
    
    /**
     * The symbol of the faction that owns the connected jump gate in the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("factionSymbol")
    public String factionSymbol;

    public ConnectedSystem withFactionSymbol(String factionSymbol) {
        this.factionSymbol = factionSymbol;
        return this;
    }
    
    @JsonProperty("sectorSymbol")
    public String sectorSymbol;

    public ConnectedSystem withSectorSymbol(String sectorSymbol) {
        this.sectorSymbol = sectorSymbol;
        return this;
    }
    
    @JsonProperty("symbol")
    public String symbol;

    public ConnectedSystem withSymbol(String symbol) {
        this.symbol = symbol;
        return this;
    }
    
    /**
     * The type of waypoint.
     */
    @JsonProperty("type")
    public SystemType type;

    public ConnectedSystem withType(SystemType type) {
        this.type = type;
        return this;
    }
    
    @JsonProperty("x")
    public Long x;

    public ConnectedSystem withX(Long x) {
        this.x = x;
        return this;
    }
    
    @JsonProperty("y")
    public Long y;

    public ConnectedSystem withY(Long y) {
        this.y = y;
        return this;
    }
    
    public ConnectedSystem(@JsonProperty("distance") Long distance, @JsonProperty("sectorSymbol") String sectorSymbol, @JsonProperty("symbol") String symbol, @JsonProperty("type") SystemType type, @JsonProperty("x") Long x, @JsonProperty("y") Long y) {
        this.distance = distance;
        this.sectorSymbol = sectorSymbol;
        this.symbol = symbol;
        this.type = type;
        this.x = x;
        this.y = y;
  }
}
