/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package emdash.SpaceTraders.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ScannedShip - The ship that was scanned. Details include information about the ship that could be detected by the scanner.
 */
public class ScannedShip {
    /**
     * The engine of the ship.
     */
    @JsonProperty("engine")
    public ScannedShipEngine engine;

    public ScannedShip withEngine(ScannedShipEngine engine) {
        this.engine = engine;
        return this;
    }
    
    /**
     * The frame of the ship.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("frame")
    public ScannedShipFrame frame;

    public ScannedShip withFrame(ScannedShipFrame frame) {
        this.frame = frame;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mounts")
    public ScannedShipMounts[] mounts;

    public ScannedShip withMounts(ScannedShipMounts[] mounts) {
        this.mounts = mounts;
        return this;
    }
    
    /**
     * The navigation information of the ship.
     */
    @JsonProperty("nav")
    public ShipNav nav;

    public ScannedShip withNav(ShipNav nav) {
        this.nav = nav;
        return this;
    }
    
    /**
     * The reactor of the ship.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reactor")
    public ScannedShipReactor reactor;

    public ScannedShip withReactor(ScannedShipReactor reactor) {
        this.reactor = reactor;
        return this;
    }
    
    /**
     * The public registration information of the ship
     */
    @JsonProperty("registration")
    public ShipRegistration registration;

    public ScannedShip withRegistration(ShipRegistration registration) {
        this.registration = registration;
        return this;
    }
    
    /**
     * The globally unique identifier of the ship.
     */
    @JsonProperty("symbol")
    public String symbol;

    public ScannedShip withSymbol(String symbol) {
        this.symbol = symbol;
        return this;
    }
    
    public ScannedShip(@JsonProperty("engine") ScannedShipEngine engine, @JsonProperty("nav") ShipNav nav, @JsonProperty("registration") ShipRegistration registration, @JsonProperty("symbol") String symbol) {
        this.engine = engine;
        this.nav = nav;
        this.registration = registration;
        this.symbol = symbol;
  }
}
